var players = [];
var bullets = []

function Player(x, y, angle, socketId) {
  this.socketId = socketId;
  this.x = x;
  this.y = y;
  this.angle = angle;
}

function Bullet(x, y, angle, guid, socketId) {
  this.x = x;
  this.y = y;
  this.angle = angle;
  this.guid = guid;
  this.socketId = socketId;
}

const uuidv4 = require('uuid/v4');
var express = require('express');
var app = express();
var server =  app.listen(3000);
app.use(express.static('public'));
console.log("My server is running");
var socket = require('socket.io');
var io = socket(server);
io.sockets.on('connection', newConnection);


function removeConnection(socket) {
  console.log('Client has disconnected');
  var send = Object.keys(io.sockets.connected).length;
  console.log(Object.keys(io.sockets.connected).length);
  io.emit('users', send);
}

function newConnection(socket) {
  players.push(new Player(250, 250, 0, socket.id));
  let createData = {
    x: 250,
    y: 250,
    angle: 0,
    socketId: socket.id,
    guid: uuidv4(),
  }
  socket.emit('createHost', createData);
  console.log('New connection: socket.id: ' + socket.id);
  var send = Object.keys(io.sockets.connected).length;
  console.log('User count: ' + Object.keys(io.sockets.connected).length);
  io.emit('users', send);

  if (players.length > 1) {
    io.emit('sendHost');
  }

  socket.on('sentHost',
    function(data) {
    socket.broadcast.emit('createHost', data);
  });

  socket.on('sendBullet',
    function(data) {
      bullets.push(new Bullet(data.x, data.y, data.angle, data.guid, data.socketId));
      socket.broadcast.emit('createBullet', data);
    });

  socket.on('hostUpdatePos',
    function(data) {
      socket.broadcast.emit('othersUpdatePos', data);
    });

  socket.on('hostUpdateAngle',
    function(data) {
      socket.broadcast.emit('othersUpdateAngle', data);
    });

  socket.on('disconnect',
    function() {
      io.emit('removePlayer', socket.id);
      for (var i = players.length - 1; i >= 0; i--) {
        if (players[i].socketId == socket.id) {
          players.splice(i, 1);
        }
      }
      removeConnection();
    });
}
